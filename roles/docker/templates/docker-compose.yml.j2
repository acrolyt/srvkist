# {{ ansible_managed }}
version: "2.1"

volumes:
#  mailserver:
  redis:
  postgres:
  mariadb:
#  maildata:
#    driver: local
#  mailstate:
#    driver: local

services:

  sslproxy:
    image: danieldent/nginx-ssl-proxy
    restart: always
    environment:
      SERVERNAME: {{ nextcloud_domain }}
      EXTRANAMES: {{ gitlab_domain }}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./configs/nginx/:/etc/nginx/conf.d
      - ./configs/letsencrypt:/etc/letsencrypt

  ###########################
  ##### Nextcloud ###########
  ###########################

  nextcloud-db:
    image: mariadb:10
    links:
      - adminer
    volumes:
      - ./nextclouddb:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD={{ mysql_root_password }}
      - MYSQL_PASSWORD={{ mysql_nextcloud_password }}
      - MYSQL_DATABASE={{ mysql_nextcloud_db }}
      - MYSQL_USER={{ mysql_nextcloud_user }}
    ports:
      - 3306:3306

  nextcloud:
    image: wonderfall/nextcloud
    links:
      - nextcloud-db
      - sslproxy
    restart: always
    depends_on:
      - nextcloud-db           # If using MySQL
    environment:
      - UID=1000
      - GID=1000
      - UPLOAD_MAX_SIZE=100G
      - APC_SHM_SIZE=128M
      - OPCACHE_MEM_SIZE=128
      - REDIS_MAX_MEMORY=64mb
      - CRON_PERIOD=15m
      - TZ=Europe/Berlin
      - ADMIN_USER={{ nextcloud_admin }}               # Don't set to configure through browser
      - ADMIN_PASSWORD={{ nextcloud_admin_pw }}        # Don't set to configure through browser
      - DOMAIN={{ nextcloud_domain }}
      - DB_TYPE=mysql
      - DB_NAME={{ mysql_nextcloud_db }}
      - DB_USER={{ mysql_nextcloud_user }}
      - DB_PASSWORD={{ mysql_nextcloud_password }}
      - DB_HOST=nextcloud-db
    volumes:
       - ./docker/nextcloud/data:/data
       - ./docker/nextcloud/config:/config
       - ./docker/nextcloud/apps:/apps2
       - ./docker/nextcloud/themes:/nextcloud/themes
    ports:
      - 8888:8888

  ###########################
  ######## Gitlab ###########
  ###########################

  adminer:
    image: adminer
    external_links:
      - nextcloud-db:nextcloud
      - gitlab_postgresql:postgresql
    restart: always
    ports:
      - 7777:8080

  gitlab_redis:
    restart: always
    image: sameersbn/redis:latest
    command:
      - --loglevel warning
    volumes:
      - ./docker/gitlab/redis:/var/lib/redis:Z

  gitlab_postgresql:
    restart: always
    links:
      - adminer
    image: sameersbn/postgresql:9.6-2
    volumes:
      - ./docker/gitlab/postgresql:/var/lib/postgresql:Z
    environment:
    - DB_USER={{ gl_pg_user }}
    - DB_PASS={{ gl_pg_pass }}
    - DB_NAME={{ gl_pg_db }}
    - DB_EXTENSION=pg_trgm

  gitlab:
    restart: always
    image: sameersbn/gitlab:latest
    links:
      - sslproxy
    depends_on:
      - sslproxy # maybe?
      - gitlab_redis
      - gitlab_postgresql
    ports:
    - "10080:80"
    - "10022:22"
    volumes:
    - ./docker/gitlab/gitlab:/home/git/data:Z
    environment:
    - DEBUG=false

    - DB_ADAPTER=postgresql
    - DB_HOST=gitlab_postgresql
    - DB_PORT=5432
    - DB_USER={{ gl_pg_user }}
    - DB_PASS={{ gl_pg_pass }}
    - DB_NAME={{ gl_pg_db }}

    - REDIS_HOST=gitlab_redis
    - REDIS_PORT=6379

    - TZ=Europe/Berlin
    - GITLAB_TIMEZONE=Berlin

    - GITLAB_HTTPS=false
    - SSL_SELF_SIGNED=false

    - GITLAB_HOST=localhost
    - GITLAB_PORT=10080
    - GITLAB_SSH_PORT=10022
    - GITLAB_RELATIVE_URL_ROOT=
    - GITLAB_SECRETS_DB_KEY_BASE={{ gl_secret_db_key }} # long-and-random-alphanumeric-string
    - GITLAB_SECRETS_SECRET_KEY_BASE={{ gl_secret_secret_key }}     # long-and-random-alphanumeric-string
    - GITLAB_SECRETS_OTP_KEY_BASE={{ gl_secret_opt_key }}        # long-and-random-alphanumeric-string

    - GITLAB_ROOT_PASSWORD={{ gl_root_pw }}
    - GITLAB_ROOT_EMAIL={{ gl_root_email }}

    - GITLAB_NOTIFY_ON_BROKEN_BUILDS=true
    - GITLAB_NOTIFY_PUSHER=false

    - GITLAB_EMAIL={{ gl_root_email }}
    - GITLAB_EMAIL_REPLY_TO={{ gl_root_email }}
    - GITLAB_INCOMING_EMAIL_ADDRESS={{ gl_root_email }}

    - GITLAB_BACKUP_SCHEDULE=daily
    - GITLAB_BACKUP_TIME=01:00

    - SMTP_ENABLED=false
    - SMTP_DOMAIN=www.example.com
    - SMTP_HOST=smtp.gmail.com
    - SMTP_PORT=587
    - SMTP_USER=mailer@example.com
    - SMTP_PASS=password
    - SMTP_STARTTLS=true
    - SMTP_AUTHENTICATION=login

    - IMAP_ENABLED=false
    - IMAP_HOST=imap.gmail.com
    - IMAP_PORT=993
    - IMAP_USER=mailer@example.com
    - IMAP_PASS=password
    - IMAP_SSL=true
    - IMAP_STARTTLS=false

    - OAUTH_ENABLED=false
    - OAUTH_AUTO_SIGN_IN_WITH_PROVIDER=
    - OAUTH_ALLOW_SSO=
    - OAUTH_BLOCK_AUTO_CREATED_USERS=true
    - OAUTH_AUTO_LINK_LDAP_USER=false
    - OAUTH_AUTO_LINK_SAML_USER=false
    - OAUTH_EXTERNAL_PROVIDERS=

    - OAUTH_GITHUB_API_KEY=
    - OAUTH_GITHUB_APP_SECRET=
    - OAUTH_GITHUB_URL=
    - OAUTH_GITHUB_VERIFY_SSL=

    - OAUTH_GITLAB_API_KEY=
    - OAUTH_GITLAB_APP_SECRET=

  ###########################
  ###### Maisfeld ###########
  ###########################
  acrolyt-php:
      image: php:7-fpm
      volumes:
        - ./www:/code


#  acrolyt_mariadb:
#    image: mariadb
#    restart: always
#    volumes:
#      - ./var/mysql:/var/lib/mysql
#    environment:
#      - MYSQL_ROOT_PASSWORD: {{ mysql_root_password }}
#      - MYSQL_PASSWORD: {{ mysql_nextcloud_password }}
#      - MYSQL_DATABASE: {{ mysql_nextcloud_db }}
#      - MYSQL_USER: {{ mysql_nextcloud_user }}

#  mailsserver:
#    container_name: acrolyt-mail
#    image: tvial/docker-mailserver:latest
#    hostname: mail
#    domainname: domain.com
#    container_name: mail
#    ports:
#      - "25:25"
#      - "143:143"
#      - "587:587"
#      - "993:993"
#    volumes:
#      - maildata:/var/mail
#      - mailstate:/var/mail-state
#      - ./config/:/tmp/docker-mailserver/
#    environment:
#      - ENABLE_SPAMASSASSIN=1
#      - ENABLE_CLAMAV=1
#      - ENABLE_FAIL2BAN=1
#      - ENABLE_POSTGREY=1
#      - ONE_DIR=1
#      - DMS_DEBUG=0
#    cap_add:
#      - NET_ADMIN

#  node:
#    container_name: acrolyt-node
#    image: simbo/node:latest
#    depends_on:
#      redis:
#        condition: service_started
#    volumes:
#      - ./data/node:/dock
#    working_dir: /dock
#    ports:
#      - 127.0.0.1:5000:5000
#    command: yarn run dev
