# {{ ansible_managed }}
version: "2.1"

volumes:
  mysql:
  mailserver:

services:

  web:
    container_name: acrolyt-nginx
    image: nginx:1.13.3-alpine
    # depends_on:
    volumes:
      - ./docker/assets/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#    volumes_from:
#      - app
    ports:
      - 8080:80

  mysql:
    container_name: acrolyt-mysql
    image: mysql
    volumes:
      - mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: {{ mysql_database }}
      MYSQL_ROOT_PASSWORD: {{ mysql_root_password }}
      MYSQL_USER: {{ mysql_user }}
      MYSQL_PASSWORD: {{ mysql_password }}
    ports:
      - 127.0.0.1:3306:3306
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 10s
      retries: 5

 redis:
    container_name: acrolyt-redis
    image: redis:3.2.10-alpine
    volumes:
      - redis:/data
  #    - ./docker/assets/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    ports:
      - 127.0.0.1:6379:6379
    command: redis-server --requirepass {{ redis_password }}

  postgres:
    container_name: acrolyt-postgres
    image: postgres:9.6.5-alpine
    volumes:
      - postgres:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: {{ pg_root_database }}
      POSTGRES_USER: {{ pg_user }}
      POSTGRES_PASSWORD: {{ pg_password }}
    ports:
      - 127.0.0.1:5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 10s
      retries: 5

  php-myadmin:
    container_name: acrolyt-phpmyadmin
    image: phpmyadmin/phpmyadmin
    depends_on:
      - db
    ports:
      - 127.0.0.1:8080:80
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: {{ pma_user }}
      PMA_PASSWORD: {{ pma_password }}

  mailsserver:
    container_name: acrolyt-mail
    image: tvial/docker-mailserver:latest
    hostname: mail
    domainname: domain.com
    container_name: mail
    ports:
    - "25:25"
    - "143:143"
    - "587:587"
    - "993:993"
    volumes:
    - maildata:/var/mail
    - mailstate:/var/mail-state
    - ./config/:/tmp/docker-mailserver/
    environment:
    - ENABLE_SPAMASSASSIN=1
    - ENABLE_CLAMAV=1
    - ENABLE_FAIL2BAN=1
    - ENABLE_POSTGREY=1
    - ONE_DIR=1
    - DMS_DEBUG=0
    cap_add:
    - NET_ADMIN

    volumes:
      maildata:
        driver: local
      mailstate:
        driver: local

#  node:
#    container_name: acrolyt-node
#    image: simbo/node:latest
#    depends_on:
#      redis:
#        condition: service_started
#    volumes:
#      - ./data/node:/dock
#    working_dir: /dock
#    ports:
#      - 127.0.0.1:5000:5000
#    command: yarn run dev
