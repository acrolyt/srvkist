# {{ ansible_managed }}
version: "2.1"

volumes:
#  mailserver:
  redis:
  postgres:
  nextcloud:
  mariadb:
#  maildata:
#    driver: local
#  mailstate:
#    driver: local

services:

  web:
    container_name: acrolyt-nginx
    image: nginx
    # depends_on:
    volumes:
      # - ./docker/assets/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nextcloud/nginx.conf:/etc/nginx/nginx.conf:ro
    volumes_from:
      - nextcloud
    links:
      - nextcloud
    ports:
      - 8080:80
    restart: always

  nextcloud:
    image: nextcloud:fpm
    links:
      - mariadb
#    volumes:
#      - "nextcloud:/home/{{ user_login }}/{{ docker_webfolder }}/nextcloud/src"
#      - "apps:/home/{{ user_login }}/{{ docker_webfolder }}/nextcloud/custom_apps"
#      - "config:/home/{{ user_login }}/{{ docker_webfolder }}/nextcloud/config"
#      - "data:/home/{{ user_login }}/{{ docker_webfolder }}/nextcloud/data"
#      - theme:/var/www/html/themes/<YOUR_CUSTOM_THEME>
    restart: always

  mariadb:
    image: mariadb
    restart: always
    volumes:
      - mariadb:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD= {{ mysql_root_password }}
      - MYSQL_PASSWORD= {{ mysql_nextcloud_password }}
      - MYSQL_DATABASE= {{ mysql_nextcloud_db }}
      - MYSQL_USER= {{ mysql_nextcloud_user }}

  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080


#  mysql:
#    container_name: acrolyt-mysql
#    image: mysql
#    volumes:
#      - mysql:/var/lib/mysql
#    environment:
#      MYSQL_DATABASE: {{ mysql_database }}
#      MYSQL_ROOT_PASSWORD: {{ mysql_root_password }}
#      MYSQL_USER: {{ mysql_user }}
#      MYSQL_PASSWORD: {{ mysql_password }}
#   ports:
#      - 127.0.0.1:3306:3306
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready"]
#      interval: 30s
#      timeout: 10s
#      retries: 5

#  redis:
#    container_name: acrolyt-redis
#    image: redis:3.2.10-alpine
#    volumes:
#      - redis:/data
#  #    - ./docker/assets/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
#    ports:
#      - 127.0.0.1:6379:6379
#    command: redis-server --requirepass {{ redis_password }}
#
#  postgres:
#    container_name: acrolyt-postgres
#    image: postgres:9.6.5-alpine
#    volumes:
#      - postgres:/var/lib/postgresql/data/
#    environment:
#      POSTGRES_DB: {{ pg_root_database }}
#      POSTGRES_USER: {{ pg_user }}
#      POSTGRES_PASSWORD: {{ pg_password }}
#    ports:
#      - 127.0.0.1:5432:5432
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready"]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#
#  php-myadmin:
#    container_name: acrolyt-phpmyadmin
#    image: phpmyadmin/phpmyadmin
#    depends_on:
#      - mariadb
#    ports:
#      - 127.0.0.1:8080:80
#    environment:
#      PMA_HOST: maria-db
#      PMA_PORT: 3306
#      PMA_USER: {{ pma_user }}
#      PMA_PASSWORD: {{ pma_password }}

#  mailsserver:
#    container_name: acrolyt-mail
#    image: tvial/docker-mailserver:latest
#    hostname: mail
#    domainname: domain.com
#    container_name: mail
#    ports:
#      - "25:25"
#      - "143:143"
#      - "587:587"
#      - "993:993"
#    volumes:
#      - maildata:/var/mail
#      - mailstate:/var/mail-state
#      - ./config/:/tmp/docker-mailserver/
#    environment:
#      - ENABLE_SPAMASSASSIN=1
#      - ENABLE_CLAMAV=1
#      - ENABLE_FAIL2BAN=1
#      - ENABLE_POSTGREY=1
#      - ONE_DIR=1
#      - DMS_DEBUG=0
#    cap_add:
#      - NET_ADMIN

#  node:
#    container_name: acrolyt-node
#    image: simbo/node:latest
#    depends_on:
#      redis:
#        condition: service_started
#    volumes:
#      - ./data/node:/dock
#    working_dir: /dock
#    ports:
#      - 127.0.0.1:5000:5000
#    command: yarn run dev
